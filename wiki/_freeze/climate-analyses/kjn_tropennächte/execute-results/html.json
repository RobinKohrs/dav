{
  "hash": "6b0327130ff1bcd04b1f50fc7c24bd1c",
  "result": {
    "engine": "knitr",
    "markdown": "---\n# -------------------------------------\n# REQUIRED & COMMON FIELDS\n# -------------------------------------\ntitle: \"Temperaturen in der Nacht\"\nauthor: \"Robin Kohrs / Netzwerk Klimajournalismus\"\ndate: \"2025-04-27\" # Use specific date, or \"today\" to auto-update on render\ndate-format: \"DD MMMM YYYY\" # Optional: How the date is displayed (e.g., 17 October 2023)\n\n# -------------------------------------\n# OPTIONAL DESCRIPTIVE FIELDS\n# -------------------------------------\n# subtitle: \"SUBTITLE:...\" # Optional additional detail\n# abstract: | # Optional multi-line summary of the analysis goals/findings\n  # Abstract\nkeywords: [climate data, analysis, netzwerk klimajournalismus, topic1, topic2] # Optional keywords\n\n# -------------------------------------\n# CUSTOM FIELDS (Examples - Adapt as needed)\n# -------------------------------------\n# You can define any key-value pairs here. They can sometimes be accessed\n# within your document or code (e.g., via quarto::quarto_metadata()).\nanalysis:\n  id: \"NKA-YYYY-NN\" # Example: Internal analysis ID\n  version: \"1.0\" # Version of this specific analysis document\n  status: \"Draft\" # E.g., Draft, In Review, Final\n  lead: \"Person Responsible\"\ndata:\n  source: \"[Name of Data Provider/URL]\"\n  accessed: \"YYYY-MM-DD\" # Date data was downloaded/accessed\n  processing_script: \"[Path to script, if any]\" # Reference R script used\n\n# -------------------------------------\n# EXECUTION OPTIONS (Control R/Python code execution)\n# -------------------------------------\nexecute:\n  echo: false # Set to 'true' to show code chunks by default\n  warning: false # Set to 'true' to show warnings\n  message: false # Set to 'true' to show messages\n  # cache: true # Uncomment to cache results of computations (speeds up re-rendering)\n  # error: true # Set to 'false' to stop rendering on code errors\n\n---\n\n\n\n\n\n\n## Minimaltemperaturen\n\n### Welche Datensätze bei der Geosphere eignen sich?\n\n- Ein-Tagesdaten mit der Minimaltemperatur zwischen 18 und 18 Uhr\n\n- Annahme: Die Minimaltemperaturen steigen\n\n:::{.callout-note collapse=true}\n\n## `klima-v2-1d` ist am geignetsten\n\n\n::: {.cell}\n\n```{.r .cell-code}\nds = geosphere_get_datasets()\nds %>% \n  filter(str_detect(resource_id, \"klima-v2\")) %>% \n  datatable(options = list(pageLength=5))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-13a79214722cf65b612b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-13a79214722cf65b612b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"station\",\"station\",\"station\",\"station\",\"station\",\"station\",\"station\",\"station\",\"station\",\"station\"],[\"historical\",\"historical\",\"historical\",\"historical\",\"historical\",\"historical\",\"historical\",\"historical\",\"historical\",\"historical\"],[\"geojson\",\"csv\",\"geojson\",\"csv\",\"geojson\",\"csv\",\"geojson\",\"csv\",\"geojson\",\"csv\"],[\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1d\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1d\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1h\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1h\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1m\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1m\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-10min\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-10min\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1y\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1y\"],[\"klima-v2-1d\",\"klima-v2-1d\",\"klima-v2-1h\",\"klima-v2-1h\",\"klima-v2-1m\",\"klima-v2-1m\",\"klima-v2-10min\",\"klima-v2-10min\",\"klima-v2-1y\",\"klima-v2-1y\"],[\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1d/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1d/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1h/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1h/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1m/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1m/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-10min/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-10min/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1y/metadata\",\"https://dataset.api.hub.geosphere.at/v1/station/historical/klima-v2-1y/metadata\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>type<\\/th>\\n      <th>mode<\\/th>\\n      <th>response_formats<\\/th>\\n      <th>url<\\/th>\\n      <th>resource_id<\\/th>\\n      <th>metadata_url<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n:::\n\n### Was wollen wir zeigen?\n\n1. **Die Intensität der Tropnnächte: ** Nicht nur die Anzahl an Tropennächten sondern die minimale Temperatur\n\n\n### Welche Stationen nehmen den Temperaturparamter auf?\n\n- Nur Wien?\n\n- Alle Landeshauptstädte?\n\n-> Die kombinierte Station an der Wiener Hohen Warte misst seit 1872\n\n\n:::{.callout-note collapse=true}\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta = geosphere_explore_resource(\"klima-v2-1h\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 38 × 3\n  name      long_name                                      unit \n  <chr>     <chr>                                          <chr>\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n# A tibble: 38 × 3\n  name      long_name                                      unit \n  <chr>     <chr>                                          <chr>\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# tl -> paramter für Lufttemperatur in 2m\nmeta$station_historical_csv$metadata$stations %>% \n  filter(id==105) %>% \n  datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-10a0e507ca53dfa47808\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-10a0e507ca53dfa47808\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[\"COMBINED\"],[105],[null],[\"Wien Hohe Warte\"],[\"Wien\"],[48.24861],[16.35639],[198],[\"1872-05-01T00:00:00+00:00\"],[\"2100-12-31T00:00:00+00:00\"],[true],[true],[true]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>type<\\/th>\\n      <th>id<\\/th>\\n      <th>group_id<\\/th>\\n      <th>name<\\/th>\\n      <th>state<\\/th>\\n      <th>lat<\\/th>\\n      <th>lon<\\/th>\\n      <th>altitude<\\/th>\\n      <th>valid_from<\\/th>\\n      <th>valid_to<\\/th>\\n      <th>has_sunshine<\\/th>\\n      <th>has_global_radiation<\\/th>\\n      <th>is_active<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,6,7,8]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresource_id = \"klima-v2-1d\"\nparameters = c(\"tlmin\")\nyear_start=1900\nyear_end=2025\nmonth_start =4\nmonth_end = 10\nstation_ids = c(105)\n```\n:::\n\n\n:::\n\n\n### Get the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download the data\nwalk(year_start:year_end, function(year) {\n  cli::cli_inform(glue(\"In year: {year}\"))\n  # get data for one month for one year\n    start_param = glue(\"{year}-{month_start}-01\")\n    days_in_end_month  = lubridate::days_in_month(as.Date(glue(\"{year}-{month_end}-01\")))\n    end_param = glue(\"{year}-{month_end}-{days_in_end_month}\")\n    \n    # output path\n    fn = glue(\"{year}_M{month_start}_to_M{month_end}.csv\")\n    op = sys_make_path(file.path(data_raw_path, fn))\n    \n    if(file.exists(op)) return()\n    \n    path = geosphere_get_data(\n      resource_id = resource_id,\n      parameters = parameters,\n      start = start_param,\n      end = end_param,\n      station_ids = station_ids,\n      output_format = \"csv\",\n      version = 1,\n      mode = \"historical\",\n      type = \"station\",\n      output_file = op,\n      verbose = T,\n      debug = F\n    )\n})\n\n# list all the files\nfiles_each_year = dir(data_raw_path, \".*\\\\.csv\", full.names = T)\ndata_each_year = files_each_year %>% map(~data.table::fread(.x)) %>% bind_rows()\n```\n:::\n\n\n### for each month get all the yearly data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare data for plotting\ndf_prepared <- data_each_year %>%\n  # Ensure time is in Date format if not already\n    mutate(time = as_datetime(time, format = \"%Y-%m-%dT%H:%M%z\")) %>% \n  # Extract date components\n  mutate(\n    year = year(time),\n    month_num = month(time),\n    # Create month factor with labels for nice facet titles\n    month_lbl = month(time, label = TRUE, abbr = FALSE),\n    day = day(time)\n  ) %>%\n  # Filter out rows where tlmin is NA, as they can't be plotted\n  filter(!is.na(tlmin)) %>%\n  # Optional: Filter for a specific station if your df has multiple\n  # filter(station == 105) %>%\n  # Arrange for potentially smoother plotting (optional)\n  arrange(year, month_num, day)\n\n\n# Define the cutoff year\nhighlight_year <- 2020\n\n# Create the plot\np <- ggplot(df_prepared, aes(x = day, y = tlmin)) +\n\n  # Layer 1: Historical years (before highlight_year) in grey\n  geom_line(\n    data = . %>% filter(year < highlight_year), # Filter data for this layer\n    aes(group = year),                          # Group by year to get separate lines\n    color = \"grey70\",                           # Set color to light grey\n    alpha = 0.7                                 # Make slightly transparent\n  ) +\n\n  # Layer 2: Recent years (highlight_year onwards) colored by year\n  geom_line(\n    data = . %>% filter(year >= highlight_year), # Filter data for this layer\n    aes(color = factor(year), group = year),    # Color by year (as factor)\n    linewidth = 0.8                             # Make recent lines slightly thicker (optional)\n  ) +\n\n  # Facet by month - creates the grid of plots\n  facet_wrap(~ month_lbl, ncol = 1) + # Adjust ncol as needed\n\n  # Apply a nice color scale for the recent years\n  scale_color_viridis_d(\n      option = \"plasma\",      # Viridis palette options: \"magma\", \"plasma\", \"inferno\", \"viridis\", \"cividis\"\n      end = 0.9               # Avoid the brightest color (often yellow)\n  ) +\n\n  # Add labels and title\n  labs(\n    title = \"Daily Minimum Temperatures by Month and Year\",\n    subtitle = paste(\"Years since\", highlight_year, \"highlighted. Station:\", first(df_prepared$station)), # Adjust if needed\n    x = \"Day of Month\",\n    y = \"Minimum Temperature (°C)\",\n    color = \"Recent Year\" # Legend title for the color scale\n  ) +\n\n  # Apply a clean theme\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.position = \"bottom\", # Or \"right\", \"left\", \"top\"\n    strip.text = element_text(face = \"bold\") # Make facet titles bold\n   )\n\n# Print the plot\nprint(p)\n```\n\n::: {.cell-output-display}\n![](kjn_tropennächte_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Optional: Save the plot\n# ggsave(\"temperature_plot.png\", plot = p, width = 14, height = 10, dpi = 300)\n```\n:::\n\n\n\n## Durschnittstemperatur in der Nacht im Juli\n\n\n\n",
    "supporting": [
      "kjn_tropennächte_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.29/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}