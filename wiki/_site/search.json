[
  {
    "objectID": "link_dirs/fonts for data visualization.html",
    "href": "link_dirs/fonts for data visualization.html",
    "title": "Fonts For Data Visualization",
    "section": "",
    "text": "How to choose the right fonts for data viz\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/fonts for data visualization.html#fonts-for-data-visualization",
    "href": "link_dirs/fonts for data visualization.html#fonts-for-data-visualization",
    "title": "Fonts For Data Visualization",
    "section": "",
    "text": "How to choose the right fonts for data viz\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/planet-images-of-gaza.html",
    "href": "link_dirs/planet-images-of-gaza.html",
    "title": "Planet Images of Gaza",
    "section": "",
    "text": "A collection of images of the gaza strip by the planet satellites\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/planet-images-of-gaza.html#planet-images-of-gaza",
    "href": "link_dirs/planet-images-of-gaza.html#planet-images-of-gaza",
    "title": "Planet Images of Gaza",
    "section": "",
    "text": "A collection of images of the gaza strip by the planet satellites\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/gaza-unosat-hub.html",
    "href": "link_dirs/gaza-unosat-hub.html",
    "title": "Gaza Unosat Hub",
    "section": "",
    "text": "Data from Unosat on Gaza\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/gaza-unosat-hub.html#gaza-unosat-hub",
    "href": "link_dirs/gaza-unosat-hub.html#gaza-unosat-hub",
    "title": "Gaza Unosat Hub",
    "section": "",
    "text": "Data from Unosat on Gaza\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "data_raw/austria_4326.html",
    "href": "data_raw/austria_4326.html",
    "title": "DAV",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     \n\n\n         0 0     false"
  },
  {
    "objectID": "climate-analyses/kjn_tropennächte.html",
    "href": "climate-analyses/kjn_tropennächte.html",
    "title": "Temperaturen in der Nacht",
    "section": "",
    "text": "# A tibble: 38 × 3\n  name      long_name                                      unit \n  &lt;chr&gt;     &lt;chr&gt;                                          &lt;chr&gt;\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n\n\n# A tibble: 38 × 3\n  name      long_name                                      unit \n  &lt;chr&gt;     &lt;chr&gt;                                          &lt;chr&gt;\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n\n\n\n\n\n\n\n\n\n[1] \"/Users/rk/projects/personal/dav/wiki/climate-analyses/images/jährliche_nachttemperatur.png\"\n\n\n\n\n\n\n\nShow Code\nresource_id = \"klima-v2-1h\"\nend_year = 2025\nmonth = 7\n\n# download data\nwalk(min_start_year:2025, function(year){\n  start = glue(\"{year}-{month}-01\")\n  last_day_in_month = lubridate::days_in_month(glue(\"{year}-{month}-01\"))\n  end = glue(\"{year}-{month}-{last_day_in_month}\")\n\n  fn = glue(\"capitals_{year}_{month}.csv\")\n  op = sys_make_path(file.path(data_raw_path_hourly_data, fn))\n  if (file.exists(op)) {\n    result = data.table::fread(op)\n  } else{\n    result = tryCatch({\n      data = geosphere_get_data(\n        resource_id = resource_id,\n        parameters = c(\"tl\"),\n        start = start,\n        end = end,\n        station_ids = davR::geosphere_stations_in_capitals$id,\n        type = \"station\",\n        mode = \"historical\",\n        output_file = op) %&gt;% data.table::fread()\n    }, error = function(e) {\n      cli::cli_warn(\"Failed processing {year}-{month}: {conditionMessage(e)}\")\n      return(NULL) # Return NULL on error\n    })\n  }\n})\n\n# read in all data\npaths = paths = dir(data_raw_path_hourly_data, \"^capitals\", full.names = T)\ndata_per_year = map(paths, data.table::fread) \ndata_all_years = data_per_year %&gt;% map(function(dpy) {\n  year = dpy$time[[1]] %&gt;% lubridate::year()\n  dpy %&gt;%\n    group_by(station) %&gt;%\n    filter(hour(time) &gt;= 22 | hour(time) &lt;= 6) %&gt;%\n    summarise(mean_night_temp_july = mean(tl, na.rm = TRUE)) %&gt;%\n    mutate(year = year) -&gt; data_one_year_summarised\n  \n})\n\n\n# put all stations together\nbind_rows(data_all_years) %&gt;% \n  group_by(station) %&gt;% \n  arrange(year, .by_group = T) %&gt;% \n  mutate(smoothed_5yr_mean = zoo::rollmean(\n    x = mean_night_temp_july,\n    k = 5,\n    fill = NA,\n    align = \"right\"           # Align window to the right (uses current year and previous 4)\n  )) -&gt; data_per_year\n\n\ndata_per_year = data_per_year %&gt;%\n  left_join(davR::geosphere_stations_in_capitals %&gt;% select(id, name) %&gt;% st_drop_geometry(), join_by(station == id)) %&gt;% \n  ungroup() %&gt;% \n  select(-station)\n  \n  \n\n\n\ncolor_yearly &lt;- \"tomato\"\ncolor_smoothed &lt;- \"#343434\" # A dark grey\n\nsmoothed_means_long &lt;- data_per_year %&gt;%\n  pivot_longer(\n    cols = c(mean_night_temp_july, smoothed_5yr_mean), # Columns to lengthen\n    names_to = \"average_type\",                         # New column for names of original cols\n    values_to = \"temperature\"                          # New column for the values\n  ) %&gt;%\n  # *** Use German labels for the factor levels ***\n  mutate(average_type = factor(average_type,\n                               levels = c(\"mean_night_temp_july\", \"smoothed_5yr_mean\"),\n                               labels = c(\"Jährlich\", \"5-Jahres Glättung\"))) # German labels\n\n# --- Step 2: Find the first year where smoothed data exists ---\nmin_start_year &lt;- smoothed_means_long %&gt;%\n  filter(average_type == \"5-Jahres Glättung\" & !is.na(temperature)) %&gt;%\n  pull(year) %&gt;%\n  min()\n\nif (!is.finite(min_start_year)) {\n  warning(\"Could not find a starting year with non-NA smoothed data. Using overall minimum year.\")\n  min_start_year &lt;- min(smoothed_means_long$year, na.rm = TRUE)\n}\n\nggplot(smoothed_means_long, aes(x = year, y = temperature)) +\n  # Draw POINTS only for \"Jährlich\" (Yearly)\n  geom_point(data = . %&gt;% filter(average_type == \"Jährlich\"),\n             size = 1,\n             alpha = 0.7,\n             aes(color = average_type),\n            key_glyph=\"point\" \n             ) +\n\n  # Draw a LINE only for \"5-Jahres Glättung\" (Smoothed)\n  # geom_line(data = . %&gt;% filter(average_type == \"5-Jahres Glättung\"),\n  #           linewidth = 0.8) +\n  geom_smooth(\n    data = . %&gt;% filter(average_type == \"Jährlich\"),\n    method = \"loess\",\n    linewidth = 0.5,\n    colour = \"black\",\n    show.legend = T,\n    aes(linetype = \"Loess Glättung\"),\n    key_glyph = \"timeseries\"\n  ) +\n  # Define linetype for the \"Loess Glättung\"\n  scale_linetype_manual(\n    name = NULL,\n    values = c(\"Loess Glättung\" = \"solid\"),\n    labels = c(\"Loess Glättung\" = \"Loess Glättung\", \"b\")\n  ) +\n  \n  # Add Horizontal Line and GERMAN Label for \"Tropennacht\"\n  geom_hline(yintercept = 20, linetype = \"dashed\", color = \"darkgrey\", linewidth=0.5) +\n  annotate(geom = \"text\",\n           x = 1950,\n           y = 20.1,\n           label = \"Tropennacht (&gt;= 20°C)\",\n           hjust = 0,\n           vjust = -1,\n           color = \"#353535\",\n           size = 1.5) +\n\n\n  scale_color_manual(\n     name = NULL,\n     values = c(\"Jährlich\" = color_yearly),\n     guide = guide_legend(override.aes = list(shape = 16, linetype = 0)) \n  ) +\n\n  coord_cartesian(xlim = c(min_start_year - 0.5, NA),\n                  # Optional: Ensure y-axis includes the annotation comfortably\n                  ylim = c(NA, NA), # Let ggplot decide y limits mostly\n                  clip = \"off\") +   # Allow annotation to potentially go outside plot panel slightly if needed\n\n  labs(\n    title = paste0(\n      \"Juli Nachttemperatur: &lt;span style='color:\", color_yearly,\n      \";'&gt;Jährlich&lt;/span&gt; vs &lt;span style='color:\", color_smoothed,\n      \";'&gt;5-Jahres Glättung&lt;/span&gt;\"\n      ),\n    subtitle = \"Nacht definiert als 18:00 - 05:59 | Station Wien Hohe Warte\",\n    x = \"Jahr\",\n    y = \"Mittlere Temperatur (°C)\"\n  ) +\n  facet_wrap(~name) + \n  theme_minimal(base_size = 7) +\n  theme(\n    legend.position = \"bottom\",\n    # *** Use element_markdown for plot title to render HTML/markdown ***\n    plot.title = element_markdown(hjust = 0.5, size = 14), # size optional\n    plot.subtitle = element_text(hjust = 0.5),\n    strip.background = element_rect(fill = \"transparent\", color = NA),\n    strip.text = element_text(face = \"bold\"),\n    panel.grid = element_line(color=\"#35353599\",linewidth = 0.05),\n    panel.border = element_rect(fill = \"transparent\",colour = \"#353535\"),\n    # Optional: Add margin above plot title for annotation space if needed\n    plot.margin = margin(t = 15, r = 5.5, b = 5.5, l = 5.5, unit = \"pt\"),\n    plot.background = element_rect(fill=\"#ffffff\", colour = \"transparent\")\n  )"
  },
  {
    "objectID": "climate-analyses/kjn_tropennächte.html#durschnittstemperatur-in-der-nacht-im-juli",
    "href": "climate-analyses/kjn_tropennächte.html#durschnittstemperatur-in-der-nacht-im-juli",
    "title": "Temperaturen in der Nacht",
    "section": "",
    "text": "# A tibble: 38 × 3\n  name      long_name                                      unit \n  &lt;chr&gt;     &lt;chr&gt;                                          &lt;chr&gt;\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n\n\n# A tibble: 38 × 3\n  name      long_name                                      unit \n  &lt;chr&gt;     &lt;chr&gt;                                          &lt;chr&gt;\n1 cglo      Globalstrahlung Mittelwert                     W/m² \n2 cglo_flag Qualitätsflag für Globalstrahlung Mittelwert   code \n3 dd        Windrichtung 360° Mittelwert                   °    \n4 dd_flag   Qualitätsflag für Windrichtung 360° Mittelwert code \n5 ddx       Windrichtung zur Spitzenböe                    °    \n6 ddx_flag  Qualitätsflag für Windrichtung zur Spitzenböe  code \n# ℹ 32 more rows\n\n\n\n\n\n\n\n\n\n[1] \"/Users/rk/projects/personal/dav/wiki/climate-analyses/images/jährliche_nachttemperatur.png\"\n\n\n\n\n\n\n\nShow Code\nresource_id = \"klima-v2-1h\"\nend_year = 2025\nmonth = 7\n\n# download data\nwalk(min_start_year:2025, function(year){\n  start = glue(\"{year}-{month}-01\")\n  last_day_in_month = lubridate::days_in_month(glue(\"{year}-{month}-01\"))\n  end = glue(\"{year}-{month}-{last_day_in_month}\")\n\n  fn = glue(\"capitals_{year}_{month}.csv\")\n  op = sys_make_path(file.path(data_raw_path_hourly_data, fn))\n  if (file.exists(op)) {\n    result = data.table::fread(op)\n  } else{\n    result = tryCatch({\n      data = geosphere_get_data(\n        resource_id = resource_id,\n        parameters = c(\"tl\"),\n        start = start,\n        end = end,\n        station_ids = davR::geosphere_stations_in_capitals$id,\n        type = \"station\",\n        mode = \"historical\",\n        output_file = op) %&gt;% data.table::fread()\n    }, error = function(e) {\n      cli::cli_warn(\"Failed processing {year}-{month}: {conditionMessage(e)}\")\n      return(NULL) # Return NULL on error\n    })\n  }\n})\n\n# read in all data\npaths = paths = dir(data_raw_path_hourly_data, \"^capitals\", full.names = T)\ndata_per_year = map(paths, data.table::fread) \ndata_all_years = data_per_year %&gt;% map(function(dpy) {\n  year = dpy$time[[1]] %&gt;% lubridate::year()\n  dpy %&gt;%\n    group_by(station) %&gt;%\n    filter(hour(time) &gt;= 22 | hour(time) &lt;= 6) %&gt;%\n    summarise(mean_night_temp_july = mean(tl, na.rm = TRUE)) %&gt;%\n    mutate(year = year) -&gt; data_one_year_summarised\n  \n})\n\n\n# put all stations together\nbind_rows(data_all_years) %&gt;% \n  group_by(station) %&gt;% \n  arrange(year, .by_group = T) %&gt;% \n  mutate(smoothed_5yr_mean = zoo::rollmean(\n    x = mean_night_temp_july,\n    k = 5,\n    fill = NA,\n    align = \"right\"           # Align window to the right (uses current year and previous 4)\n  )) -&gt; data_per_year\n\n\ndata_per_year = data_per_year %&gt;%\n  left_join(davR::geosphere_stations_in_capitals %&gt;% select(id, name) %&gt;% st_drop_geometry(), join_by(station == id)) %&gt;% \n  ungroup() %&gt;% \n  select(-station)\n  \n  \n\n\n\ncolor_yearly &lt;- \"tomato\"\ncolor_smoothed &lt;- \"#343434\" # A dark grey\n\nsmoothed_means_long &lt;- data_per_year %&gt;%\n  pivot_longer(\n    cols = c(mean_night_temp_july, smoothed_5yr_mean), # Columns to lengthen\n    names_to = \"average_type\",                         # New column for names of original cols\n    values_to = \"temperature\"                          # New column for the values\n  ) %&gt;%\n  # *** Use German labels for the factor levels ***\n  mutate(average_type = factor(average_type,\n                               levels = c(\"mean_night_temp_july\", \"smoothed_5yr_mean\"),\n                               labels = c(\"Jährlich\", \"5-Jahres Glättung\"))) # German labels\n\n# --- Step 2: Find the first year where smoothed data exists ---\nmin_start_year &lt;- smoothed_means_long %&gt;%\n  filter(average_type == \"5-Jahres Glättung\" & !is.na(temperature)) %&gt;%\n  pull(year) %&gt;%\n  min()\n\nif (!is.finite(min_start_year)) {\n  warning(\"Could not find a starting year with non-NA smoothed data. Using overall minimum year.\")\n  min_start_year &lt;- min(smoothed_means_long$year, na.rm = TRUE)\n}\n\nggplot(smoothed_means_long, aes(x = year, y = temperature)) +\n  # Draw POINTS only for \"Jährlich\" (Yearly)\n  geom_point(data = . %&gt;% filter(average_type == \"Jährlich\"),\n             size = 1,\n             alpha = 0.7,\n             aes(color = average_type),\n            key_glyph=\"point\" \n             ) +\n\n  # Draw a LINE only for \"5-Jahres Glättung\" (Smoothed)\n  # geom_line(data = . %&gt;% filter(average_type == \"5-Jahres Glättung\"),\n  #           linewidth = 0.8) +\n  geom_smooth(\n    data = . %&gt;% filter(average_type == \"Jährlich\"),\n    method = \"loess\",\n    linewidth = 0.5,\n    colour = \"black\",\n    show.legend = T,\n    aes(linetype = \"Loess Glättung\"),\n    key_glyph = \"timeseries\"\n  ) +\n  # Define linetype for the \"Loess Glättung\"\n  scale_linetype_manual(\n    name = NULL,\n    values = c(\"Loess Glättung\" = \"solid\"),\n    labels = c(\"Loess Glättung\" = \"Loess Glättung\", \"b\")\n  ) +\n  \n  # Add Horizontal Line and GERMAN Label for \"Tropennacht\"\n  geom_hline(yintercept = 20, linetype = \"dashed\", color = \"darkgrey\", linewidth=0.5) +\n  annotate(geom = \"text\",\n           x = 1950,\n           y = 20.1,\n           label = \"Tropennacht (&gt;= 20°C)\",\n           hjust = 0,\n           vjust = -1,\n           color = \"#353535\",\n           size = 1.5) +\n\n\n  scale_color_manual(\n     name = NULL,\n     values = c(\"Jährlich\" = color_yearly),\n     guide = guide_legend(override.aes = list(shape = 16, linetype = 0)) \n  ) +\n\n  coord_cartesian(xlim = c(min_start_year - 0.5, NA),\n                  # Optional: Ensure y-axis includes the annotation comfortably\n                  ylim = c(NA, NA), # Let ggplot decide y limits mostly\n                  clip = \"off\") +   # Allow annotation to potentially go outside plot panel slightly if needed\n\n  labs(\n    title = paste0(\n      \"Juli Nachttemperatur: &lt;span style='color:\", color_yearly,\n      \";'&gt;Jährlich&lt;/span&gt; vs &lt;span style='color:\", color_smoothed,\n      \";'&gt;5-Jahres Glättung&lt;/span&gt;\"\n      ),\n    subtitle = \"Nacht definiert als 18:00 - 05:59 | Station Wien Hohe Warte\",\n    x = \"Jahr\",\n    y = \"Mittlere Temperatur (°C)\"\n  ) +\n  facet_wrap(~name) + \n  theme_minimal(base_size = 7) +\n  theme(\n    legend.position = \"bottom\",\n    # *** Use element_markdown for plot title to render HTML/markdown ***\n    plot.title = element_markdown(hjust = 0.5, size = 14), # size optional\n    plot.subtitle = element_text(hjust = 0.5),\n    strip.background = element_rect(fill = \"transparent\", color = NA),\n    strip.text = element_text(face = \"bold\"),\n    panel.grid = element_line(color=\"#35353599\",linewidth = 0.05),\n    panel.border = element_rect(fill = \"transparent\",colour = \"#353535\"),\n    # Optional: Add margin above plot title for annotation space if needed\n    plot.margin = margin(t = 15, r = 5.5, b = 5.5, l = 5.5, unit = \"pt\"),\n    plot.background = element_rect(fill=\"#ffffff\", colour = \"transparent\")\n  )"
  },
  {
    "objectID": "spatial.html",
    "href": "spatial.html",
    "title": "Spatial",
    "section": "",
    "text": "ncdump -h on the large file\n\n\n\n\n\n\n\nShow Code\n# Use intern = TRUE to capture the output\n#ncdump = system(glue(\"ncdump -h {raster_file_path}\"), intern = TRUE)\n#cat(ncdump, sep=\"\\n\")\n\n\n\n\n\n\n\n\n\n\n\nRead in the data\n\n\n\n\n\n\nHere all have the same dimensions!\n\n\n\nShow Code\n# the  austrian shape\naustria = read_sf(austria_4326_path)"
  },
  {
    "objectID": "spatial.html#load-data",
    "href": "spatial.html#load-data",
    "title": "Spatial",
    "section": "",
    "text": "ncdump -h on the large file\n\n\n\n\n\n\n\nShow Code\n# Use intern = TRUE to capture the output\n#ncdump = system(glue(\"ncdump -h {raster_file_path}\"), intern = TRUE)\n#cat(ncdump, sep=\"\\n\")\n\n\n\n\n\n\n\n\n\n\n\nRead in the data\n\n\n\n\n\n\nHere all have the same dimensions!\n\n\n\nShow Code\n# the  austrian shape\naustria = read_sf(austria_4326_path)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DAV",
    "section": "",
    "text": "DAV"
  },
  {
    "objectID": "qgis_tips.html",
    "href": "qgis_tips.html",
    "title": "Qgis Tips and Tricks",
    "section": "",
    "text": "from here\ncollect_geometries(\n    array_foreach(\n        overlay_intersects (@layer, boundary($geometry)),\n        shared_paths (@element, boundary($geometry))\n    )\n)"
  },
  {
    "objectID": "qgis_tips.html#only-shared-borders",
    "href": "qgis_tips.html#only-shared-borders",
    "title": "Qgis Tips and Tricks",
    "section": "",
    "text": "from here\ncollect_geometries(\n    array_foreach(\n        overlay_intersects (@layer, boundary($geometry)),\n        shared_paths (@element, boundary($geometry))\n    )\n)"
  },
  {
    "objectID": "all-links.html",
    "href": "all-links.html",
    "title": "Links Collection",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nPlanet Images of Gaza\n\n\nA collection of images of the gaza strip by the planet satellites\n\n\n\n\n\nMay 20, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nGaza Unosat Hub\n\n\n\ndataset\n\nreference\n\n\n\nData from Unosat on Gaza\n\n\n\n\n\nMay 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nOverture Maps\n\n\n\narticle\n\ndataset\n\n\n\nSome fancy derivate of osm data\n\n\n\n\n\nMay 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nState of Palestine Humdata\n\n\n\ndataset\n\nreference\n\n\n\nHumdata datasets for the state of palestine\n\n\n\n\n\nMay 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nDeepl Account Page\n\n\n\ntechnical\n\n\n\nGet the API Key…\n\n\n\n\n\nMay 17, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nFonts For Data Visualization\n\n\n\narticle\n\nreference\n\ntechnical\n\nfonts_\n\n\n\nHow to choose the right fonts for data viz\n\n\n\n\n\nMay 16, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "climate_analyses.html",
    "href": "climate_analyses.html",
    "title": "Climate Analyses",
    "section": "",
    "text": "SOME DESRIPTION TO FOLLOW\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\nTemperaturen in der Nacht\n\n\n\nRobin Kohrs / Netzwerk Klimajournalismus\n\n\nApr 27, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "misc.html",
    "href": "misc.html",
    "title": "Tips and Tricks for this and that",
    "section": "",
    "text": "It sucks to open finder with a shortcut configured via apple script because it alwas brings up all the windows of Finder on the current workspace while what you actually want is to only bring the newly created one on top. E.g. this script works, but does exactly that…\non run {input, parameters}\n\n    tell application \"Finder\"\n        -- Check if there are NO Finder windows open\n        if (count of Finder windows) is 0 then\n            -- If no windows are open, make exactly one new window.\n            -- This will open in the current Space.\n            make new Finder window\n        end if\n        \n        -- Whether a window was just opened or already existed,\n        -- bring Finder to the front (activating it in the current Space).\n        activate\n    end tell\n    \n    return input\nend run\n-&gt; Better look here and just use opt+cmd-space to open finder!\n\n\n\n\ncheck here and use this command for enabling smooth scrolling in VS Code (or any other codium editor)\n\ndefaults write -g ApplePressAndHoldEnabled -bool false\n\nor use this command to check if it is enabled\n\ndefaults read -g ApplePressAndHoldEnabled"
  },
  {
    "objectID": "misc.html#mac",
    "href": "misc.html#mac",
    "title": "Tips and Tricks for this and that",
    "section": "",
    "text": "It sucks to open finder with a shortcut configured via apple script because it alwas brings up all the windows of Finder on the current workspace while what you actually want is to only bring the newly created one on top. E.g. this script works, but does exactly that…\non run {input, parameters}\n\n    tell application \"Finder\"\n        -- Check if there are NO Finder windows open\n        if (count of Finder windows) is 0 then\n            -- If no windows are open, make exactly one new window.\n            -- This will open in the current Space.\n            make new Finder window\n        end if\n        \n        -- Whether a window was just opened or already existed,\n        -- bring Finder to the front (activating it in the current Space).\n        activate\n    end tell\n    \n    return input\nend run\n-&gt; Better look here and just use opt+cmd-space to open finder!\n\n\n\n\ncheck here and use this command for enabling smooth scrolling in VS Code (or any other codium editor)\n\ndefaults write -g ApplePressAndHoldEnabled -bool false\n\nor use this command to check if it is enabled\n\ndefaults read -g ApplePressAndHoldEnabled"
  },
  {
    "objectID": "link_dirs/deepl account page.html",
    "href": "link_dirs/deepl account page.html",
    "title": "Deepl Account Page",
    "section": "",
    "text": "Get the API Key…\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/deepl account page.html#deepl-account-page",
    "href": "link_dirs/deepl account page.html#deepl-account-page",
    "title": "Deepl Account Page",
    "section": "",
    "text": "Get the API Key…\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/overture maps.html",
    "href": "link_dirs/overture maps.html",
    "title": "Overture Maps",
    "section": "",
    "text": "Some fancy derivate of osm data\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/overture maps.html#overture-maps",
    "href": "link_dirs/overture maps.html#overture-maps",
    "title": "Overture Maps",
    "section": "",
    "text": "Some fancy derivate of osm data\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/state of palestine humdata.html",
    "href": "link_dirs/state of palestine humdata.html",
    "title": "State of Palestine Humdata",
    "section": "",
    "text": "Humdata datasets for the state of palestine\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "link_dirs/state of palestine humdata.html#state-of-palestine-humdata",
    "href": "link_dirs/state of palestine humdata.html#state-of-palestine-humdata",
    "title": "State of Palestine Humdata",
    "section": "",
    "text": "Humdata datasets for the state of palestine\n\nView External Link{:target=“_blank” rel=“noopener noreferrer”}"
  },
  {
    "objectID": "scrolly.html",
    "href": "scrolly.html",
    "title": "DAV",
    "section": "",
    "text": "&lt;button id=\"toggleScrollButton\"&gt;Toggle to Site Scroll&lt;/button&gt;\n\n&lt;div class=\"image-content-wrapper\" id=\"imageContentWrapper\"&gt;\n    &lt;img src=\"./scrolly_test.png\" alt=\"Tall scrolling image\" id=\"mainImage\" onerror=\"this.src='https://via.placeholder.com/600x1200/CCCCCC/969696?text=Placeholder+Image+Error'; this.style.backgroundColor='#e0e0e0';\"&gt;\n    \n    &lt;div class=\"top-fade-overlay\" id=\"topFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;div class=\"bottom-fade-overlay\" id=\"bottomFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;button id=\"customScrollDownBtn\" class=\"custom-scroll-button\" aria-label=\"Scroll Down\"&gt;↓&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;div class=\"scroll-progress-track\" id=\"scrollProgressTrack\"&gt;\n    &lt;div class=\"scroll-progress-bar\" id=\"scrollProgressBar\"&gt;&lt;/div&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "gaza_scroller/scrolly.html",
    "href": "gaza_scroller/scrolly.html",
    "title": "Scrolling Image Widget - External Files",
    "section": "",
    "text": "Here is the custom image scroller:\n\n&lt;button id=\"toggleScrollButton\"&gt;Toggle to Site Scroll&lt;/button&gt;\n&lt;div class=\"image-content-wrapper\" id=\"imageContentWrapper\"&gt;\n    &lt;img src=\"./scrolly_test.png\" alt=\"Tall scrolling image\" id=\"mainImage\" onerror=\"this.src='https://via.placeholder.com/600x1200/CCCCCC/969696?text=Placeholder+Image+Error'; this.style.backgroundColor='#e0e0e0';\"&gt;\n    &lt;div class=\"top-fade-overlay\" id=\"topFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;div class=\"bottom-fade-overlay\" id=\"bottomFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;button id=\"customScrollDownBtn\" class=\"custom-scroll-button\" aria-label=\"Scroll Down\"&gt;↓&lt;/button&gt;\n&lt;/div&gt;\n&lt;div class=\"scroll-progress-track\" id=\"scrollProgressTrack\"&gt;\n    &lt;div class=\"scroll-progress-bar\" id=\"scrollProgressBar\"&gt;&lt;/div&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "gaza_scroller/scrolly.html#my-interactive-scrolling-image",
    "href": "gaza_scroller/scrolly.html#my-interactive-scrolling-image",
    "title": "Scrolling Image Widget - External Files",
    "section": "",
    "text": "Here is the custom image scroller:\n\n&lt;button id=\"toggleScrollButton\"&gt;Toggle to Site Scroll&lt;/button&gt;\n&lt;div class=\"image-content-wrapper\" id=\"imageContentWrapper\"&gt;\n    &lt;img src=\"./scrolly_test.png\" alt=\"Tall scrolling image\" id=\"mainImage\" onerror=\"this.src='https://via.placeholder.com/600x1200/CCCCCC/969696?text=Placeholder+Image+Error'; this.style.backgroundColor='#e0e0e0';\"&gt;\n    &lt;div class=\"top-fade-overlay\" id=\"topFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;div class=\"bottom-fade-overlay\" id=\"bottomFadeOverlay\"&gt;&lt;/div&gt;\n    &lt;button id=\"customScrollDownBtn\" class=\"custom-scroll-button\" aria-label=\"Scroll Down\"&gt;↓&lt;/button&gt;\n&lt;/div&gt;\n&lt;div class=\"scroll-progress-track\" id=\"scrollProgressTrack\"&gt;\n    &lt;div class=\"scroll-progress-bar\" id=\"scrollProgressBar\"&gt;&lt;/div&gt;\n&lt;/div&gt;"
  }
]