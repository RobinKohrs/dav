% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_create_lookup.R
\name{spatial_create_lookup}
\alias{spatial_create_lookup}
\title{Create a two-level spatial lookup from a geospatial raster}
\usage{
spatial_create_lookup(
  input_raster_file,
  output_base_dir,
  n_groups = 500,
  crs_output = "EPSG:4326",
  seed = 123
)
}
\arguments{
\item{input_raster_file}{A string path to the input raster file.
Must be a format readable by \code{terra::rast()}.}

\item{output_base_dir}{A string path to the directory where the output
\code{lookups} folder will be created.}

\item{n_groups}{The target number of groups (clusters) to partition the
raster cells into. This determines the number of rows in \code{main.csv}.}

\item{crs_output}{The target Coordinate Reference System (CRS) for the output
data, specified as an EPSG string (e.g., "EPSG:4326"). Defaults to WGS 84,
the standard for web maps.}

\item{seed}{An integer to set the random seed for k-means clustering,
ensuring reproducible results. Defaults to 123.}
}
\value{
Invisibly returns a list containing the paths to the generated
\code{main.csv} file and the directory of group CSVs. This is primarily for
programmatic use; the main effect is writing files to disk.
}
\description{
This function processes a geospatial raster file (e.g., GeoTIFF or NetCDF)
to generate a two-level lookup structure suitable for web applications. It
partitions the raster cells into a specified number of spatially coherent
groups using k-means clustering and exports the data as a series of CSV files.

The output consists of:
\enumerate{
\item A main index file (\code{main.csv}) containing the overall bounding box for
each group.
\item A directory of individual group files (\code{g_*.csv}), where each file
contains the detailed coordinates and bounding box for every cell within
that group.
}
}
\examples{
\dontrun{
# Create a dummy raster file for the example
r = terra::rast(xmin = 9, xmax = 17, ymin = 46, ymax = 49,
                 resolution = 0.01, crs = "EPSG:4326")
r[] = 1:terra::ncell(r)
temp_raster_path = file.path(tempdir(), "austria_dummy.tif")
terra::writeRaster(r, temp_raster_path)

# Define an output directory
temp_output_dir = file.path(tempdir(), "my_app_data")

# Run the function
create_spatial_lookup(
  input_raster_file = temp_raster_path,
  output_base_dir = temp_output_dir,
  n_groups = 50
)

# Check the output
list.files(file.path(temp_output_dir, "lookups"))
list.files(file.path(temp_output_dir, "lookups", "grid_cells"))
}
}
