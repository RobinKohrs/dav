% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/daza_people_killed.R
\name{gaza_people_killed}
\alias{gaza_people_killed}
\title{Download Data from HDX (State of Palestine - Hostilities)}
\usage{
gaza_people_killed()
}
\value{
A character string: the path to the downloaded temporary file.
The file extension is inferred from the download URL.
}
\description{
This function downloads the primary dataset (assumed to be the
"Killed in Gaza" data or similar) from the Humanitarian Data Exchange (HDX)
page for "The State of Palestine - Escalation of Hostilities". It uses a
simple CSS selector (\code{a.resource-download-button}) to find the first
matching download link, downloads the file to a temporary location,
and returns the path to this temporary file.
}
\details{
Download "Killed in Gaza" Data (Simplified)

The function attempts to fetch the main HTML page, locate the download
link via the CSS selector \code{a.resource-download-button}, construct an absolute
URL for the download, and then download the file. It uses a minimal
User-Agent for the download request. Error handling is basic, focusing
on the success of reading the page and downloading the file.
}
\examples{
\dontrun{
  try({
    # Ensure you have an internet connection for this example to run.
    temp_file_location = gaza_people_killed() # Assuming this is the exported name
    print(paste("Data downloaded to:", temp_file_location))

    # Example: if it's an Excel file
    if (tools::file_ext(temp_file_location) \%in\% c("xlsx", "xls")) {
      if (requireNamespace("readxl", quietly = TRUE)) {
        # To read the data:
        # gaza_data = readxl::read_excel(temp_file_location)
        # print(head(gaza_data))
        message("To read the Excel file, you can use: \n",
                "gaza_data <- readxl::read_excel('", temp_file_location, "')")
      } else {
        message("Package 'readxl' is recommended for reading Excel files.")
      }
    }
  }, error = function(e) {
    message("An error occurred during the example: ", e$message)
  })
}
}
