% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geosphere_get_prediction.R
\name{geosphere_get_forecast}
\alias{geosphere_get_forecast}
\title{Get Weather Forecast Data from GeoSphere Austria}
\usage{
geosphere_get_forecast(
  host,
  x = NULL,
  y = NULL,
  level = NULL,
  subdatasets = NULL,
  download_dir = "data_raw",
  timezone = "Europe/Paris"
)
}
\arguments{
\item{host}{Character. The data source: \code{"nwp"}, \code{"nowcast"}, or \code{"ensemble"}.}

\item{x}{Numeric. Optional. Longitude coordinate (in WGS84, decimal degrees)
for point data extraction. If \code{NULL} (default) or invalid, the full raster is returned.}

\item{y}{Numeric. Optional. Latitude coordinate (in WGS84, decimal degrees)
for point data extraction. If \code{NULL} (default) or invalid, the full raster is returned.}

\item{level}{Optional. The vertical level to filter for (e.g., 850 hPa).
Filtering depends on layer naming conventions in the source file.}

\item{subdatasets}{Optional. Character vector of subdatasets (variables)
to load (e.g., \code{"T"}, \code{"U"}, \code{"V"}). If \code{NULL} (default), \code{terra::rast}
attempts to load the first/default subdataset(s).}

\item{download_dir}{Character. Path to the directory for storing downloaded files.
Defaults to \code{"data_raw"}.}

\item{timezone}{Character. The target timezone for the time information
(e.g., \code{"Europe/Vienna"}, \code{"UTC"}). Defaults to \code{"Europe/Paris"}.}
}
\value{
If valid \code{x} and \code{y} coordinates within the approximate Austrian
bounding box are provided, returns a \code{data.frame} with columns \code{value}
and \code{time}. Otherwise, returns a \code{terra::SpatRaster} object containing
the requested forecast data layers, potentially filtered by \code{level},
with its time dimension adjusted to the specified \code{timezone}.
}
\description{
Downloads the latest forecast data (NWP, Nowcast, or Ensemble)
and either returns the full raster dataset or extracts a time series
for a specific point.
}
\examples{
\dontrun{
# --- Examples ---

# Example 1: Get point data for Vienna (NWP, default variable)
vienna_lon = 16.3738
vienna_lat = 48.2082
nwp_vienna_point = geosphere_get_forecast(host = "nwp",
                                          x = vienna_lon, y = vienna_lat,
                                          timezone = "Europe/Vienna")
if (inherits(nwp_vienna_point, "data.frame")) {
  print(head(nwp_vienna_point))
  # plot(nwp_vienna_point$time, nwp_vienna_point$value, type = 'l')
}

# Example 2: Get the full raster for Ensemble Temperature (T) at 850 hPa
ensemble_t850_raster = geosphere_get_forecast(host = "ensemble",
                                              x = NULL, y = NULL, # Explicitly request raster
                                              subdatasets = "T",
                                              level = 850,
                                              timezone = "UTC")
if (inherits(ensemble_t850_raster, "SpatRaster")) {
  print(ensemble_t850_raster)
  # terra::plot(ensemble_t850_raster[[1]]) # Plot first time step
}

# Example 3: Coordinates outside Austria - should return raster
outside_raster = geosphere_get_forecast(host = "nwp", x = 0, y = 0)
if (inherits(outside_raster, "SpatRaster")) {
  print(outside_raster)
}

# Example 4: No coordinates specified - should return raster
nowcast_raster = geosphere_get_forecast(host = "nowcast")
if (inherits(nowcast_raster, "SpatRaster")) {
   print(nowcast_raster)
}

}
}
