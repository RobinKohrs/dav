% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gaza_commodity_prices.R
\name{gaza_commodity_prices}
\alias{gaza_commodity_prices}
\title{Download and Process Gaza Commodity Price Data}
\usage{
gaza_commodity_prices(translate_names = TRUE)
}
\arguments{
\item{translate_names}{Logical. If \code{TRUE} (default), attempts to translate
commodity names to German using \code{polyglotr::google_translate}. Requires
the \code{polyglotr} package. If \code{FALSE} or \code{polyglotr} is not available,
\code{commodity_name_german} will be \code{NA}.}
}
\value{
A tibble with processed commodity price data. Columns include:
\itemize{
\item \code{commodity_name_english}: Original commodity name in English.
\item \code{commodity_name_german}: Translated commodity name in German (or NA if translation off/failed).
\item \code{date}: The date of the price observation.
\item \code{absolute_price}: The price of the commodity.
}
}
\description{
Downloads commodity price data for Gaza from the Humanitarian
Data Exchange (HDX), processes it into a tidy format, and can translate
commodity names to German.
}
\details{
Gaza Commodity Prices

The function fetches the Excel file from the "State of Palestine -
Price of basic commodities in Gaza" dataset on HDX. It cleans the column
names, identifies relevant commodity and price columns, and pivots the data
into a long format. Dates are parsed: one special column representing
October 2023 data is assigned \code{2023-10-01}, and others are derived from
Excel serial date numbers present in column headers (e.g., "Nov-23" becomes
\code{x45231} then \code{2023-11-01}). Commodity names (English) can be translated.
The output is a tibble with columns: \code{commodity_name_english},
\code{commodity_name_german} (optional), \code{date}, and \code{absolute_price}.
}
\examples{
\dontrun{
  try({
    gaza_prices = gaza_commodity_prices()
    print(head(gaza_prices))

    # Example if polyglotr is not installed or translation is off:
    # gaza_prices_no_translate = gaza_commodity_prices(translate_names = FALSE)
    # print(head(gaza_prices_no_translate))
  }, error = function(e) {
    message("Error in example: ", e$message)
    message("This might be due to network issues, API limits, or changes in data source.")
  })
}
}
