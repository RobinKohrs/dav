% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geosphere_get_ressource_metadata.R
\name{geosphere_get_resource_metadata}
\alias{geosphere_get_resource_metadata}
\title{Get Metadata for a Geosphere Resource (with auto-lookup)}
\usage{
geosphere_get_resource_metadata(
  resource_id,
  type = NULL,
  mode = NULL,
  interactive = FALSE,
  api_url = "https://dataset.api.hub.geosphere.at",
  version = "v1",
  user_agent = "davR"
)
}
\arguments{
\item{resource_id}{Character string. The specific dataset or resource ID
(e.g., "apolis_short-v1-1d-100m", "klima-v2-1h"). This is required.}

\item{type}{Character string or \code{NULL}. The data type (e.g., "grid", "station").
If \code{NULL} (default), the function will try to look it up.}

\item{mode}{Character string or \code{NULL}. The data mode (e.g., "historical").
If \code{NULL} (default), the function will try to look it up.}

\item{interactive}{Logical. If \code{TRUE} and multiple type/mode/format combinations are
found for the \code{resource_id}, prompt the user to select one via a menu.
Defaults to \code{FALSE} (stops with an error in case of ambiguity).}

\item{api_url}{Base URL for the Geosphere API. Defaults to Geosphere Hub v1.}

\item{version}{API version string. Defaults to "v1".}

\item{user_agent}{A string to identify the client. Defaults to "davR".}
}
\value{
A list parsed from the JSON metadata response for the \emph{selected} or
\emph{specified} type/mode combination. The list also includes \verb{$determined_type}
and \verb{$determined_mode} indicating which combination was used. Returns \code{NULL}
if the request fails, the resource ID is not found, or the user cancels
interactive selection.
}
\description{
Retrieves the metadata for a specific Geosphere API resource. If \code{type} and/or
\code{mode} are not provided, the function attempts to look them up using
\code{geosphere_find_datasets}. It considers the \code{response_formats} when checking
for unique combinations and can handle ambiguity either by stopping or prompting
the user interactively.
}
\examples{
\dontrun{
# Assume geosphere_find_datasets is available in the package or environment

# Example 1: Interactive lookup for a resource with multiple formats
try({
  meta_interactive = geosphere_get_resource_metadata(
     resource_id = "apolis_short-v1-1d-100m",
     interactive = TRUE
  )
  # You might be prompted to choose between grid/geojson, grid/netcdf, etc.
  if (!is.null(meta_interactive)) {
     print(paste("Metadata fetched for type:", meta_interactive$determined_type,
                 "mode:", meta_interactive$determined_mode))
     print(names(meta_interactive))
  }
})

# Example 2: Explicitly provide type and mode (lookup is skipped)
try({
  meta_explicit = geosphere_get_resource_metadata(
     resource_id = "klima-v2-1h",
     type = "station",
     mode = "historical"
  )
  if (!is.null(meta_explicit)) {
     print(utils::head(meta_explicit$parameters)) # Use utils::head explicitly
  }
})

# Example 3: Provide only resource_id, non-interactive (will likely error if ambiguous)
# try(geosphere_get_resource_metadata(resource_id = "apolis_short-v1-1d-100m"))

}
}
