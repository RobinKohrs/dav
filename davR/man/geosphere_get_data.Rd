% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geosphere_get_data.R
\name{geosphere_get_data}
\alias{geosphere_get_data}
\title{Get data from geosphere data}
\usage{
geosphere_get_data(
  ...,
  api_url = "https://dataset.api.hub.geosphere.at",
  version = "v1",
  type = "grid",
  mode = "historical",
  resource_id = "spartacus-v2-1d-1km",
  output_file = tempfile(),
  timeout_seconds = 120
)
}
\arguments{
\item{...}{Query parameters specific to the API endpoint (e.g., \code{parameters = "tl_mittel"}, \code{start = "2023-01-01"}, \code{station_ids = "5925"}). Values will be automatically URL-encoded.}

\item{api_url}{Base URL for the Geosphere API.}

\item{version}{API version string.}

\item{type}{Data type (e.g., "grid", "timeseries", "station").}

\item{mode}{Data mode (e.g., "historical", "current", "forecast").}

\item{resource_id}{The specific dataset or resource ID.}

\item{output_file}{Path where the downloaded data should be saved. Defaults to a temporary file.}

\item{timeout_seconds}{Request timeout in seconds. Passed to \code{httr::GET}.}
}
\value{
The path to the \code{output_file}.
}
\description{
Constructs a URL and fetches data from the Geosphere API based on the provided parameters.
The function uses the \code{httr} package to build the URL and perform the GET request.
See the Geosphere API documentation for details on available endpoints and parameters:
\itemize{
\item \href{https://dataset.api.hub.geosphere.at/v1/docs/getting-started.html}{Getting Started}
\item \href{https://dataset.api.hub.geosphere.at/v1/docs/user-guide/resource.html#resources}{Resources}
\item \href{https://dataset.api.hub.geosphere.at/v1/datasets}{Datasets Overview}
}
Example endpoint: \href{https://dataset.api.hub.geosphere.at/v1/timeseries/historical/spartacus-v2-1m-1km}{SPARTACUS Monthly}
Example metadata: \href{https://dataset.api.hub.geosphere.at/v1/timeseries/historical/spartacus-v2-1m-1km/metadata}{SPARTACUS Monthly Metadata}
}
\examples{
\dontrun{
# Example 1: Get monthly climate data for a station and save to temp file
temp_csv_path <- geosphere_get_data(
    parameters = "tl_mittel", # Note parameters are now named arguments
    start = "2023-01-01",
    end = "2023-12-31",
    station_ids = "5925", # Use character for IDs if needed
    output_format = "csv",
    type = "station",
    mode = "historical",
    resource_id = "klima-v2-1m"
)
print(temp_csv_path)
# data = read.csv(temp_csv_path) # Optionally read the data

# Example 2: Get hourly data and read directly using readr::read_csv
start_time <- "2024-04-06T05:00:00"
end_time <- "2024-04-06T17:00:00"
hourly_data <- geosphere_get_data(
    parameters = "tl",
    start = start_time,
    end = end_time,
    station_ids = 5925, # Numeric ID works too
    output_format = "csv",
    type = "station",
    mode = "historical",
    resource_id = "klima-v2-1h"
) \%>\% readr::read_csv()
print(head(hourly_data))
}

}
